<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 定时器开关 开始 -->
	<task:annotation-driven />
	<!-- 定时器开关 结束 -->
	
	<!-- 读取资源文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:sqlserver://gzwolfsoft.oicp.net:1434;DatabaseName=ErpNWBMStock" />
		<property name="username" value="login" />
		<property name="password" value="disneyatyongjun" />
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	</bean>
	
	<bean id="rds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:sqlserver://121.196.132.138:30003;DatabaseName=erpemnbmstock" />
		<property name="username" value="login" />
		<property name="password" value="disneyatyongjun" />
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	</bean>
	<!-- 多数据源datasource -->
	<bean id="multiDataSource" class="com.wofu.fenxiao.utils.MultiDataSource">
	<property name="defaultTargetDataSource" ref="dataSource"/><!-- 默认数据源 -->
	<property name="targetDataSources">
		<map>
			<entry key="defaultdatasource" value-ref="dataSource"/>
			<entry key="rdsdatasource" value-ref="rds"/>
		</map>
	</property>
	</bean>
	
	<bean id="pagePlugin" class="com.wofu.fenxiao.pulgins.PagePlugin">
		<property name="properties">
			<props>
				<prop key="dialect">mssql</prop>
				<prop key="pageSqlId">*query*</prop>
			</props>
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multiDataSource" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:*Mapper.xml"/>
		<property name="typeAliasesPackage" value="com.wofu.fenxiao.domain"/>
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
	</bean>
	<!-- 通过扫描的模式，扫描目录在com.lanyuan.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wofu.fenxiao.mapping" />
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 注解类型 的事务配置 这里用jdk代理  true的时候用cglib来处理-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>
	<!--  
	     声明式事务配置 
	
	<aop:config>
		<aop:pointcut
			expression="execution(public * com.wofu.fenxiao.service.impl.*Impl.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for=""/>
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="logicDelById" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	-->
	
	<!-- 读取配置文件 -->
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:rds.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>

	
<!--  
	 <bean id="log4jHandlerAOP" class="com.lanyuan.logAop.LogAopAction"></bean> 
		<aop:config proxy-target-class="true">
		    <aop:aspect id="logAspect" ref="log4jHandlerAOP"> 
		    <aop:pointcut id="logPointCut" expression="execution(* com.wofu.fenxiao.service.impl.*.* (..))" /> 
		    <aop:around method="logAll" pointcut-ref="logPointCut" /> </aop:aspect> 
		</aop:config>
-->

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.wofu.fenxiao.service" />
	<!-- <context:component-scan base-package="com.lanyuan.log"/> -->
	
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />
</beans>