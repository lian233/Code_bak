package org.example.servicefororder;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "ServiceForOrder", targetNamespace = "http://www.example.org/ServiceForOrder/")
public interface ServiceForOrder {

	/**
	 * 
	 * @param orderInfo
	 * @param ask
	 * @param orderCode
	 * @param message
	 * @param headerRequest
	 * @param error
	 * @param referenceNo
	 */
	@WebMethod(action = "http://www.example.org/ServiceForOrder/createOrder")
	@RequestWrapper(localName = "createOrder", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.CreateOrder")
	@ResponseWrapper(localName = "createOrderResponse", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.CreateOrderResponse")
	public void createOrder(
			@WebParam(name = "HeaderRequest", targetNamespace = "") HeaderRequest headerRequest,
			@WebParam(name = "OrderInfo", targetNamespace = "") OrderInfo orderInfo,
			@WebParam(name = "ask", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> ask,
			@WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> message,
			@WebParam(name = "orderCode", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> orderCode,
			@WebParam(name = "error", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<ErrorType>> error,
			@WebParam(name = "referenceNo", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<ErrorType>> referenceNo);

	/**
	 * 
	 * @param orderInfo
	 * @param ask
	 * @param orderCode
	 * @param message
	 * @param headerRequest
	 * @param error
	 */
	@WebMethod(action = "http://www.example.org/ServiceForOrder/createOrder")
	@RequestWrapper(localName = "updateOrder", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.UpdateOrder")
	@ResponseWrapper(localName = "updateOrderResponse", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.UpdateOrderResponse")
	public void updateOrder(
			@WebParam(name = "HeaderRequest", targetNamespace = "") HeaderRequest headerRequest,
			@WebParam(name = "OrderInfo", targetNamespace = "") UpdateOrderInfo orderInfo,
			@WebParam(name = "ask", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> ask,
			@WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> message,
			@WebParam(name = "orderCode", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> orderCode,
			@WebParam(name = "error", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<ErrorType>> error);

	/**
	 * 
	 * @param orderStatus
	 * @param ask
	 * @param orderCode
	 * @param message
	 * @param headerRequest
	 * @param error
	 */
	@WebMethod(action = "http://www.example.org/ServiceForOrder/updateOrderStatus")
	@RequestWrapper(localName = "updateOrderStatus", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.UpdateOrderStatus")
	@ResponseWrapper(localName = "updateOrderStatusResponse", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.UpdateOrderStatusResponse")
	public void updateOrderStatus(
			@WebParam(name = "HeaderRequest", targetNamespace = "") HeaderRequest headerRequest,
			@WebParam(name = "orderCode", targetNamespace = "", mode = WebParam.Mode.INOUT) Holder<String> orderCode,
			@WebParam(name = "orderStatus", targetNamespace = "") int orderStatus,
			@WebParam(name = "ask", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<String>> ask,
			@WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<String>> message,
			@WebParam(name = "error", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<ErrorType>> error);

	/**
	 * 
	 * @param ask
	 * @param orderCode
	 * @param data
	 * @param headerRequest
	 * @param error
	 */
	@WebMethod(action = "http://www.example.org/ServiceForOrder/getOrderByCode")
	@RequestWrapper(localName = "getOrderByCode", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.GetOrderByCode")
	@ResponseWrapper(localName = "getOrderByCodeResponse", targetNamespace = "http://www.example.org/ServiceForOrder/", className = "org.example.servicefororder.GetOrderByCodeResponse")
	public void getOrderByCode(
			@WebParam(name = "HeaderRequest", targetNamespace = "") HeaderRequest headerRequest,
			@WebParam(name = "orderCode", targetNamespace = "") String orderCode,
			@WebParam(name = "ask", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<String> ask,
			@WebParam(name = "Data", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<OrderData>> data,
			@WebParam(name = "Error", targetNamespace = "", mode = WebParam.Mode.OUT) Holder<List<ErrorType>> error);

}
